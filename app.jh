application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName sr2
    buildTool maven
    cacheProvider ehcache
    clientFramework react
    clientTheme none
    creationTimestamp 1707380636679
    databaseType sql
    devDatabaseType h2Memory
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    feignClient false
    jhipsterVersion "8.1.0"
    jwtSecretKey "MDY1YmUzZjllNWM0MGE2ZTkwOGRkMmQ4NTBmY2VlNDNiNjA2OGRhNWEzZmRhY2FjN2JlOTY0ZWIyYjhkZjgyODYxYmIwNDgwN2ZkZmU1MDI1MDIyZTljYzFhNTUwMTYzZGY5MDhmNDhjNDRjYWFjZGMzZmZlOTEwMmFmYWNlMDk="
    languages [en, fi]
    messageBroker false
    microfrontends []
    nativeLanguage en
    packageName com.softala.sr2
    prodDatabaseType postgresql
    reactive false
    searchEngine false
    serviceDiscoveryType false
    testFrameworks []
    websocket false
    withAdminUi true
  }

  entities Company, Invoice, Reservation, ReservedItem, Stock, StockItem, StockItemType
}

@ChangelogDate("20240208082456")
entity Company {
  companyName String required maxlength(50)
  companyEmail String required maxlength(60) pattern(/^[^@\s]+@[^@\s]+.[^@\s]+$/)
  companyDetails String maxlength(500)
}
@ChangelogDate("20240208082756")
entity Invoice {
  totalSum BigDecimal
  invoiceDate LocalDate
  isClosed Boolean required
}
@ChangelogDate("20240208082656")
entity Reservation {
  reservationDate LocalDate required
  isPickedUp Boolean required
}
@ChangelogDate("20240208082656")
entity ReservedItem {
  quantity Integer required
}
@ChangelogDate("20240208082556")
entity Stock {
  stockDate LocalDate required
}
@ChangelogDate("20240208082456")
entity StockItem {
  quantity Integer required
  available Integer required
  price BigDecimal required
}
@ChangelogDate("20240208082556")
entity StockItemType {
  typeName String required
}
relationship OneToMany {
  @OnUpdate(CASCADE) Company{invoice} to Invoice{company required}
  Invoice{stock} to Stock{invoice}
  Reservation{reservedItem} to ReservedItem{reservation}
  Stock{stockItem} to StockItem{stock}
  StockItem{reservedItem} to ReservedItem{stockItem}
  StockItemType{stockItem} to StockItem{stockItemType}
}

paginate Company, Invoice, Reservation, ReservedItem, Stock, StockItem, StockItemType with pagination
service Company, Invoice, Reservation, ReservedItem, Stock, StockItem, StockItemType with serviceClass
search Company, Invoice, Reservation, ReservedItem, Stock, StockItem, StockItemType with no
